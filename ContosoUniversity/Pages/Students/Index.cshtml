@page
@model ContosoUniversity.Pages.Students.IndexModel

@{
    ViewData["Title"] = "Students";
}

<h2>Students</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<p>
    <a asp-page="Create" class="btn btn-primary">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" class="form-control d-inline-block w-auto" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <input id="quote" type="hidden" value="@Model.Quote">
            <a asp-page="./Index" class="btn btn-secondary">Back to full List</a>
        </p>
    </div>
</form>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Students[0].LastName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Students[0].FirstMidName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Students[0].EnrollmentDate)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Students)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                <td>@Html.DisplayFor(modelItem => item.FirstMidName)</td>
                <td>@Html.DisplayFor(modelItem => item.EnrollmentDate)</td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav>
    <ul class="pagination">
        <li class="page-item @(Model.Students.HasPreviousPage ? "" : "disabled")">
            <a class="page-link"
               asp-page="./Index"
               asp-route-sortOrder="@Model.CurrentSort"
               asp-route-pageIndex="@(Model.Students.PageIndex - 1)"
               asp-route-currentFilter="@Model.CurrentFilter">
                Previous
            </a>
        </li>
        <li class="page-item @(Model.Students.HasNextPage ? "" : "disabled")">
            <a class="page-link"
               asp-page="./Index"
               asp-route-sortOrder="@Model.CurrentSort"
               asp-route-pageIndex="@(Model.Students.PageIndex + 1)"
               asp-route-currentFilter="@Model.CurrentFilter">
                Next
            </a>
        </li>
    </ul>
</nav>